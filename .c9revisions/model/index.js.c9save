{"ts":1352933141540,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var mongoose = require('mongoose');\nvar db = mongoose.createConnection('localhost', 'test');\n\nvar schema = mongoose.Schema({ _id: { type: 'string', default: genUuid}, Url: 'string' });\nvar NodifiedUrl = db.model('NodifiedUrl', schema);\n\n\nvar MongoRepository = function() {};\nMongoRepository.prototype.create = function(url, callback) {\n\tvar nurl = new NodifiedUrl({ Url: url });\n\tnurl.save(function(err) {\n\t\tconsole.log(err);\n\t\tcallback(nurl, err);\n\t});\n};\n\n\nMongoRepository.prototype.get = function(uuid, callback) {\n\tNodifiedUrl.findById(uuid, function(err, nurl) {\n\t\tif (err) throw err;\n\t\tcallback(nurl);\n\t});\n};\n\nMongoRepository.prototype.search = function(searchPhrase, callback) {\n\tvar query = NodifiedUrl.find({}).limit(10).where('Url', /^.+$/).where('Url', new RegExp(\"^.*\" + searchPhrase + \".*$\"));\n\tquery.exec(function(err, queryResult) {\n\t\tif (err) throw err;\n\t\tcallback(queryResult);\n\t});\n};\n\nMongoRepository.prototype.delete = function(uuid, callback) {\n\tvar item = NodifiedUrl.findById(uuid, function(err, nurl) {\n\t\tif (err) throw err;\n\t\titem.remove(function(err, result) {\n\t\t\tif (err) throw err;\n\t\t\tcallback();\n\t\t});\n\t});\n};\n\n\nfunction genUuid() {\n\tvar characterStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"; // len = 24 + 24 + 10 = 58\n\tvar characters = characterStr.split('');\n\tvar uuid = \"\";\n\tfor (var i = 0; i < 6; i++) {\n\t\tvar rand = Math.round(Math.random() * 58);\n\t\tuuid = uuid + characters[rand];\n\t}\n\n\treturn uuid;\n}\n\nexports.MongoRepository = MongoRepository;"]],"start1":0,"start2":0,"length1":0,"length2":1507}]],"length":1507}
